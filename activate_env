#!/bin/bash
MY_CMAKE=$(which cmake)
if [ ! -d venv ] ;
then
    virtualenv venv -p python3 || exit 1    
    source venv/bin/activate || exit 1
    pip install -r requirements_dev.txt || exit 1 
    my_firsttime=true
else
    source venv/bin/activate || exit 1
    my_firsttime=false
fi

export CMAKE_INCLUDE_PATH=${VIRTUAL_ENV}/include
export CMAKE_LIBRARY_PATH=${VIRTUAL_ENV}/lib
export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:${VIRTUAL_ENV}/include
export C_INCLUDE_PATH=$C_INCLUDE_PATH:${VIRTUAL_ENV}/include
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${VIRTUAL_ENV}/lib
export LIBRARY_PATH=$LIBRARY_PATH:${VIRTUAL_ENV}/lib

if $my_firsttime ; then
	./install_all.sh || exit 1
fi

shopt -s expand_aliases

# create cmake substitute (cmake with param)
echo "$MY_CMAKE -DCMAKE_INSTALL_PREFIX:PATH=${VIRTUAL_ENV} \"\$@\"" > ${VIRTUAL_ENV}/bin/mycmake
chmod a+x ${VIRTUAL_ENV}/bin/mycmake

if [ -d framework/scripts ] ;
then
    # create script links
    for f in $(find framework/scripts -type f); do
        ln -s $(pwd)/$f ${VIRTUAL_ENV}/bin/$(basename $f)
    done
fi

echo "alias cmake=mycmake" > ${VIRTUAL_ENV}/bin/custom_settings.sh
source ${VIRTUAL_ENV}/bin/custom_settings.sh

if $my_firsttime ;
then
{
	./install_all_externals.sh || exit 1

    rm -rf framework/mdsd_support_library_cpp/build
    mkdir framework/mdsd_support_library_cpp/build
    cd framework/mdsd_support_library_cpp/build
    mycmake .. && make install
    cd -
}
fi
echo "ok. environment activated. exit shell to exit environment..."
if [[ ! -z "$1" ]];
then
echo "$1 source ${VIRTUAL_ENV}/bin/activate && source ${VIRTUAL_ENV}/bin/custom_settings.sh $2"
eval "$1 source ${VIRTUAL_ENV}/bin/activate && source ${VIRTUAL_ENV}/bin/custom_settings.sh $2"
else
bash --rcfile <(cat $HOME/.bashrc; echo "source ${VIRTUAL_ENV}/bin/activate && source ${VIRTUAL_ENV}/bin/custom_settings.sh")
fi 

